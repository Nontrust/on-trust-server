plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com'
version = '0.0.1-SNAPSHOT'

// Source and build target compatibility
sourceCompatibility = '17'

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    asciidoctorVersion = "3.0.0"
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    // Web development libraries
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.springframework.boot:spring-boot-devtools'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // QueryDsl with Jakarta annotation
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // MySQL connector
    runtimeOnly 'mysql:mysql-connector-java:8.0.30'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.assertj:assertj-core:3.24.2'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring REST Docs
    // https://docs.spring.io/spring-restdocs/docs/3.0.0/reference/htmlsingle/
    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidoctorVersion}"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidoctorVersion}"
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

bootJar {
    // Include generated API documentation in the application's static resource path
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// Run tests only if the 'test' property is not specified
test.onlyIf {
    !project.hasProperty('test')
}
